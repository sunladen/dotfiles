set nocompatible

set encoding=utf-8
scriptencoding utf-8

set hidden
set noswapfile
set incsearch
set hls
set path=.,**
set nospell
set signcolumn=no
set tabstop=4 shiftwidth=4 autoindent smartindent
set noexpandtab
set nottimeout
set ttimeoutlen=0
set ruler
set number
set noshowmode
set laststatus=2
set showtabline=2
set cursorline

let g:netrw_dirhistmax = 0

set wildcharm=<Tab>
set wildmenu
set wildmode=full
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png,*.ico
set wildignore+=*.pdf,*.psd
set wildignore+=LINCENSE,node_modules/*,.git/*

" <Tab> in normal mode shows wildmenu of buffers
nnoremap <Tab> :buffer<Space><Tab>

" Ctr-P open wildmenu for edit *
map <C-p> :e *<Tab>



" Enable system clipboard integration
set clipboard+=unnamedplus


nnoremap <SPACE> <Nop>
let mapleader=" "


" turn terminal to normal mode with escape
"tnoremap <Esc> <C-\><C-n>

nmap <leader>N :lprev<cr>
nmap <leader>n :lnext<cr>


" move among buffers
map <leader>h :bprev<CR>
map <leader>l :bnext<CR>
map <leader>0 :b0<CR>
map <leader>1 :b1<CR>
map <leader>2 :b2<CR>
map <leader>3 :b3<CR>
map <leader>4 :b4<CR>
map <leader>5 :b5<CR>
map <leader>6 :b6<CR>
map <leader>7 :b7<CR>
map <leader>8 :b8<CR>
map <leader>9 :b9<CR>

map [[ :silent! eval search('{', 'b')<CR>
map ]] :silent! eval search('{')<CR>


" Use a line cursor within insert mode and a block cursor everywhere else.
"
" Reference chart of values:
"   Ps = 0  -> blinking block.
"   Ps = 1  -> blinking block (default).
"   Ps = 2  -> steady block.
"   Ps = 3  -> blinking underline.
"   Ps = 4  -> steady underline.
"   Ps = 5  -> blinking bar (xterm).
"   Ps = 6  -> steady bar (xterm).
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

autocmd VimEnter * normal! :startinsert :stopinsert


" Plug plugins manager
" Install manager if not intalled
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.vim/plugged')
  Plug 'dense-analysis/ale'
	Plug 'eslint/eslint'
	Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
	Plug 'junegunn/fzf.vim'
	"Plug 'tomasiser/vim-code-dark'
	Plug 'itchyny/lightline.vim'
	Plug 'mengelbrecht/lightline-bufferline'
call plug#end()


set background=dark

"hi Normal ctermbg=NONE
"hi StatusLine ctermbg=1
"hi CursorLineNr cterm=none
"hi ColorColumn ctermbg=Black
hi CursorLine cterm=bold
hi CursorLineNr cterm=bold

syntax enable

let g:lightline#bufferline#show_number  = 1
let g:lightline#bufferline#shorten_path = 0
let g:lightline#bufferline#unnamed      = '[No Name]'

let g:lightline                  = {}
let g:lightline.tabline          = {'left': [['buffers']], 'right': [['close']]}
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type   = {'buffers': 'tabsel'}


autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif


let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['eslint'],
\}
let g:ale_fix_on_save = 1

nmap <leader>j :ALENext<cr>

nnoremap <leader>ff <cmd>Files<cr>
nnoremap <leader>fg <cmd>Rg<cr>
nnoremap <leader>fb <cmd>Buffers<cr>
