set nocompatible

set encoding=utf-8
scriptencoding utf-8

set hidden
set noswapfile
set incsearch
set hls
set path=.,**
set nospell
set signcolumn=no
set tabstop=2 shiftwidth=2 autoindent smartindent
set noexpandtab
set nottimeout
set ttimeoutlen=10
set ruler
set number
set noshowmode
set laststatus=1
set cursorline

highlight CursorLine term=bold cterm=bold gui=bold
highlight CursorLineNr term=bold cterm=bold gui=bold

let g:netrw_dirhistmax = 0

set wildcharm=<Tab>
set wildmenu
set wildmode=full
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png,*.ico
set wildignore+=*.pdf,*.psd
set wildignore+=LINCENSE,node_modules/*,.git/*

" <Tab> in normal mode shows wildmenu of buffers
nnoremap <Tab> :buffer<Space><Tab>

" Ctr-P open wildmenu for edit *
map <C-p> :e *<Tab>


syntax on

highlight LineNr ctermfg=Black cterm=bold
highlight ColorColumn ctermbg=Black


" Enable system clipboard integration
set clipboard+=unnamedplus


nnoremap <SPACE> <Nop>
let mapleader=" "


" turn terminal to normal mode with escape
tnoremap <Esc> <C-\><C-n>


" move among buffers
map <leader>h :bprev<CR>
map <leader>l :bnext<CR>

map [[ :silent! eval search('{', 'b')<CR>
map ]] :silent! eval search('{')<CR>


if &term =~ '^xterm'
  " use blinking vertical bar in insert mode
  let &t_SI = "\<Esc>[5 q"
  " use solid block otherwise
  let &t_EI = "\<Esc>[2 q"
  " clear screen on vim exit
  let &t_TE = "\<Esc>[H\<Esc>[2J"
endif


hi Normal guibg=NONE ctermbg=NONE


" Plug plugins manager
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
  Plug 'dense-analysis/ale'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
  Plug 'francoiscabrol/ranger.vim'
  Plug 'rbgrouleff/bclose.vim'
call plug#end()


" open ranger when vim open a directory
let g:ranger_replace_netrw = 1

" display hidden files by default
let g:ranger_command_override = 'ranger --cmd "set show_hidden=true"'


let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['eslint'],
\}
let g:ale_fix_on_save = 1

nmap <leader>j :ALENext<cr>

nmap <leader>N :lprev<cr>
nmap <leader>n :lnext<cr>



" use <tab> for trigger completion and navigate to the next complete item
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction



" Find files using fzf
nnoremap <leader>ff <cmd>Files<cr>
nnoremap <leader>fg <cmd>Rg<cr>
nnoremap <leader>fb <cmd>Lines<cr>

let $FZF_DEFAULT_COMMAND="rg --files --hidden"
